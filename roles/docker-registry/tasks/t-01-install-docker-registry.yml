---

- name: run own private docker registry
  docker_container:
    name: registry
    image: registry:2
    restart_policy: always
    #ip:hostPort:containerPort
    published_ports: 5000:5000
  tags: registry_run

# first we need public key for packages.icinga.com for icinga2
- name: get the packages.icinga.com public key
  local_action: get_url url=https://packages.icinga.com/icinga.key
    dest="{{playbook_dir}}/docker/icinga2/configs/icinga.key" owner=martin group=martin mode=0640
  tags: images_push

# first we need public key for packages.icinga.com for icingaweb2
- name: get the packages.icinga.com public key
  local_action: get_url url=https://packages.icinga.com/icinga.key
    dest="{{playbook_dir}}/docker/icingaweb2/configs/icinga.key" owner=martin group=martin mode=0640
  tags: images_push

##### only for testing that the config files provided by ansible will be used in docker containers
#- name: only for testing that the config files provided by ansible will be used in docker containers
#  local_action: lineinfile
#  args:
#    path: "{{item}}"
#    regexp: '# This comment is only to test if the right config - provided by Ansible and not from image is used'
#    line: '# This comment is only to test if the right config - provided by Ansible and not from image is used'
#    state: absent
#  with_items:
#    - "{{playbook_dir}}/docker/mariadb/configs/mariadb-cnf-files/conf.d/galera.cnf"
#    - "{{playbook_dir}}/docker/icingaweb2/configs/icingaweb2-cnf-files/authentication.ini"
#    - "{{playbook_dir}}/docker/icingaweb2/configs/apache2-cnf-files/apache2.conf"

- name: copy dockerfiles for containers needed
  synchronize:
    src: "docker/{{item}}"
    dest: /docker/
  with_items: "{{dockerfiles}}"
  tags: images_push
  register: dockerfiles_changed

##### only for testing that the config files provided by ansible will be used in docker containers
#- name: only for testing that the config files provided by ansible will be used in docker containers
#  local_action: lineinfile
#  args:
#    path: "{{item}}"
#    regexp: '# This comment is only to test if the right config - provided by Ansible and not from image is used'
#    line: '# This comment is only to test if the right config - provided by Ansible and not from image is used'
#  with_items:
#    - "{{playbook_dir}}/docker/mariadb/configs/mariadb-cnf-files/conf.d/galera.cnf"
#    - "{{playbook_dir}}/docker/icingaweb2/configs/icingaweb2-cnf-files/authentication.ini"
#    - "{{playbook_dir}}/docker/icingaweb2/configs/apache2-cnf-files/apache2.conf"

- name: set_fact which images need to recreate
  set_fact:
    recreate_images: "{{recreate_images | default([]) + [current_result.item] }}"
  when: current_result.changed
  with_items: "{{dockerfiles_changed.results}}"
  loop_control:
    loop_var: current_result

# needed only in situation when we neeed to be sure that image will be prepared from the newest package version
#- name: delete the previous versions of images if exist only if the docker files were changed
#  docker_image:
#    name: localhost:5000/{{item}}
#    state: absent
#    force: True
#  when: item in recreate_images | default([])
#  with_items: "{{dockerfiles}}"
#  tags: images_push

- name: Build an image and push it to a private repo
  docker_image:
    path: /docker/{{item}}
    name: localhost:5000/{{item}}
    push: yes
    force: yes                      #https://github.com/ansible/ansible/issues/19379
  when: item in recreate_images | default([])
  with_items: "{{dockerfiles}}"
  tags: images_push
