---
#### 1. first run of icinga2 on master
- name: Start a icinga2 container on master - provider
  docker_container:
    name: "icinga2-{{ inventory_hostname_short }}"
    image: "{{ docker.registry }}/icinga2"
    pull: yes
    network_mode: host
    volumes:
      - icinga2_cmd:/var/run/icinga2/cmd/
      - /dir-config/icinga2:/dir-config:rw
      - /dir-config/icinga2-ca:/var/lib/icinga2/ca:rw
    env:
      DB: "{{virtual_ipaddress}}"
  when: inventory_hostname_short[-1:] == '1'

# 2. SET CERTIFICATES COMMON FOR ALL MASTERS
- name: create temporary directory for certificates from provider
  local_action: file
  args:
    path: "{{playbook_dir}}/roles/docker-icinga2/files"
    owner: martin
    group: martin
    mode: 0750
    state: directory

- name: Wait 600 seconds for port 5665 to become open on the host
  wait_for:
    port: 5665
    timeout: 600
  when: inventory_hostname_short[-1:] == '1'

  # copy zones, constants to the provider before configuring receivers to have connection to them
- name: register files to prepare from template to PROVIDER
  local_action: shell find {{playbook_dir}}/templates/icinga2-cnf-files/master-provider/ -maxdepth 1 -type f -printf "%f\n"
  register: files_to_copy
  when: inventory_hostname_short[-1:] == '1'

  #directory structure not needed in this moment
- name: copy from templates TO PROVIDER ADDITIONAL - zones, constants
  template:
    src: "icinga2-cnf-files/master-provider/{{item}}"
    dest: "/dir-config/icinga2/{{item[:-3]}}"
    owner: 2010
    group: 2010
    mode: 0640
  with_items: "{{files_to_copy.stdout_lines}}"
  when: inventory_hostname_short[-1:] == '1'

#3. SECOND start of icinga container
- name: copying to provider finished - restart icinga2 provider needed to accept the config changes
  docker_container:
    name: "icinga2-{{inventory_hostname_short}}"
    restart: yes
  when: inventory_hostname_short[-1:] == '1'

  # share files from /var/lib/icinga2/ca with all receivers
- name: register cert files /var/lib/icinga2/ca from provider
  shell: find /dir-config/icinga2-ca/ -maxdepth 1 -type f -printf "%f\n"
  register: files_to_copy
  when: inventory_hostname_short[-1:] == '1'

- name: fetch certificates to the local from ca cert provider /var/lib/icinga2/ca
  fetch:
    src: "/dir-config/icinga2-ca/{{item}}"
    dest: "{{playbook_dir}}/roles/docker-icinga2/files"
    owner: martin
    group: martin
  with_items: "{{files_to_copy.stdout_lines}}"
  when: inventory_hostname_short[-1:] == '1'

- name:  copying the whole /var/lib/icinga2/ca directory for ca certs to receivers
  copy:
    src: "{{playbook_dir}}/roles/docker-icinga2/files/{{inventory_hostname_short[:-1]}}1.{{domain}}/dir-config/icinga2-ca/"
    dest: "/dir-config/icinga2-ca/"
    owner: 2010
    group: 2010
  when: inventory_hostname_short[-1:] != '1'

#- name:  copying the ca.cert from /var/lib/icinga2/ca directory to receivers certs /var/lib/icinga2/certs/ca.crt
#  copy:
#    src: "{{playbook_dir}}/roles/docker-icinga2/files/{{inventory_hostname_short[:-1]}}1.{{domain}}/dir-config/icinga2-ca/ca.crt"
#    dest: "/dir-config/icinga2-ca/certs/"
#    owner: systemd-resolve
#    group: systemd-network
#  when: inventory_hostname_short[-1:] != '1'

- name: file /dir-config/icinga2/conf.d/hosts.conf has to be absent on all masters
  file:
    path: "/dir-config/icinga2/conf.d/hosts.conf"
    state: absent
  when: inventory_hostname_short[-1:] == '1'

- name: Wait 120 seconds for port 5665 to become open on the provider "{{inventory_hostname_short}}"
  wait_for:
    port: 5665
    timeout: 120
  when: inventory_hostname_short[-1:] == '1'

- name: Generating ticket on master provider for each receiver separatelly
  shell: docker exec icinga2-web1 icinga2 pki ticket --cn "{{ item }}"
  with_items: "{{groups.frontend|difference(groups.frontend[0])}}"
  when: inventory_hostname_short[-1:] == '1'
  register: tickets

- name: set variable dictionary pki_tickets = node -> ticket on localhost
  local_action: set_fact
  args:
    pki_tickets: "{'{{ current_ticket.item }}':'{{ current_ticket.stdout }}'}"
  with_items: "{{tickets.results}}"
  loop_control:
    loop_var: current_ticket
  when: inventory_hostname_short[-1:] == '1'

#### 3. first run of icinga2 on master receivers
- name: Start a icinga2 container on master - receivers
  docker_container:
    name: "icinga2-{{inventory_hostname_short}}"
    image: "{{ docker.registry }}/icinga2"
    pull: yes
    network_mode: host
    volumes:
      - icinga2_cmd:/var/run/icinga2/cmd/
      - /dir-config/icinga2:/dir-config:rw
      - /dir-config/icinga2-ca:/var/lib/icinga2/ca:rw
    env:
      PKI_TICKET: "{{hostvars[groups.frontend[0]].pki_tickets[inventory_hostname]}}"
      DB: "{{virtual_ipaddress}}"
  when: inventory_hostname_short[-1:] != '1'
##########################
- name: register files to prepare from template to RECEIVERS
  local_action: shell find {{playbook_dir}}/templates/icinga2-cnf-files/master-receivers/ -maxdepth 1 -type f -printf "%f\n"
  register: files_to_copy
  when: inventory_hostname_short[-1:] != '1'
  # finaly we can create this variable for each node -
  #first node will prive with this variable others will copy the files

  #directory structure not needed in this moment
- name: copy from templates TO RECEIVERS ADDITIONAL - zones, constants
  template:
    src: "icinga2-cnf-files/master-receivers/{{item}}"
    dest: "/dir-config/icinga2/{{item[:-3]}}"
    owner: 2010
    group: 2010
    mode: 0640
  with_items: "{{files_to_copy.stdout_lines}}"
  when: inventory_hostname_short[-1:] != '1'

- name: file /dir-config/icinga2/conf.d/hosts.conf has to be absent on all masters
  file:
    path: "/dir-config/icinga2/conf.d/hosts.conf"
    state: absent
  when: inventory_hostname_short[-1:] != '1'

#4. THIRD start on provider and SECOND start on receivers
- name: restart the icinga2 container at the end of configuration on all masters
  docker_container:
    name: "icinga2-{{inventory_hostname_short}}"
    restart: yes
##########################
- name: Wait 120 seconds for port 5665 to become open on the host
  wait_for:
    port: 5665
    timeout: 120

- name: delete temporary directory for certificates from localhost
  local_action: file
  args:
    path: "{{playbook_dir}}/roles/docker-icinga2/files"
    state: absent
  run_once: true
